<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProjectClose extends \App\Entity\ProjectClose implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'id', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'contract_number', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'name', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'registration_date', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'totalCost', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'startDate', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'endTime', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'date', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'commercialValue', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'total_cost_task', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'total_cost_inventory'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'id', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'contract_number', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'name', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'registration_date', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'totalCost', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'startDate', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'endTime', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'date', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'commercialValue', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'total_cost_task', '' . "\0" . 'App\\Entity\\ProjectClose' . "\0" . 'total_cost_inventory'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProjectClose $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getContractNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContractNumber', []);

        return parent::getContractNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setContractNumber(?string $contract_number): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContractNumber', [$contract_number]);

        return parent::setContractNumber($contract_number);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(?string $name): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationDate', []);

        return parent::getRegistrationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationDate(?\DateTimeInterface $registration_date): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationDate', [$registration_date]);

        return parent::setRegistrationDate($registration_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCost(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCost', []);

        return parent::getTotalCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalCost(?float $totalCost): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalCost', [$totalCost]);

        return parent::setTotalCost($totalCost);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate(?\DateTimeInterface $startDate): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndTime(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndTime', []);

        return parent::getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndTime(?\DateTimeInterface $endTime): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndTime', [$endTime]);

        return parent::setEndTime($endTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(?array $date): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommercialValue(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommercialValue', []);

        return parent::getCommercialValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommercialValue(?float $commercialValue): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommercialValue', [$commercialValue]);

        return parent::setCommercialValue($commercialValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCostTask(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCostTask', []);

        return parent::getTotalCostTask();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalCostTask(?float $total_cost_task): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalCostTask', [$total_cost_task]);

        return parent::setTotalCostTask($total_cost_task);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCostInventory(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCostInventory', []);

        return parent::getTotalCostInventory();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalCostInventory(?float $total_cost_inventory): \App\Entity\ProjectClose
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalCostInventory', [$total_cost_inventory]);

        return parent::setTotalCostInventory($total_cost_inventory);
    }

}
