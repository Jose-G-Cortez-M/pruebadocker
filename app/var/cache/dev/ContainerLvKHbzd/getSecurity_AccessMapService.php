<?php

namespace ContainerLvKHbzd;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_AccessMapService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.access_map' shared service.
     *
     * @return \Symfony\Component\Security\Http\AccessMap
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/AccessMapInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/AccessMap.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/RequestMatcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-foundation/RequestMatcher.php';

        $container->privates['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/cable/'), [0 => 'ROLE_CELLAR', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/tool'), [0 => 'ROLE_CELLAR', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/material'), [0 => 'ROLE_CELLAR', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/addprojects'), [0 => 'ROLE_PROJECT_MANAGER', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/client'), [0 => 'ROLE_PROJECT_MANAGER', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/counter'), [0 => 'ROLE_COUNTER', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/homepage'), [0 => 'ROLE_CELLAR', 1 => 'ROLE_PROJECT_MANAGER', 2 => 'ROLE_COUNTER', 3 => 'ROLE_WORKERS', 4 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/movement'), [0 => 'ROLE_CELLAR', 1 => 'ROLE_PROJECT_MANAGER', 2 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/project/close'), [0 => 'ROLE_COUNTER', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/project'), [0 => 'ROLE_PROJECT_MANAGER', 1 => 'ROLE_COUNTER', 2 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/task'), [0 => 'ROLE_PROJECT_MANAGER', 1 => 'ROLE_MANAGER'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/user'), [0 => 'ROLE_MANAGER'], NULL);

        return $instance;
    }
}
